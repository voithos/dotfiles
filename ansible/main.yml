---
- hosts: all
  vars:
    user: zaven
    home: "/home/{{ user }}"
    dotfiles: "{{ home }}/.dotfiles"
    localconf_dir: "{{ dotfiles }}/ansible/files"

    symlinks:
      - { src: 'ansible/ansible.cfg', dest: '.ansible.cfg' }
      - { src: 'bash', dest: '.bash' }
      - { src: 'bash/bashrc.sh', dest: '.bashrc' }
      - { src: 'bash/dir_colors', dest: '.dir_colors' }
      - { src: 'bash/inputrc', dest: '.inputrc' }
      - { src: 'fonts', dest: '.fonts' }
      - { src: 'git/gitconfig', dest: '.gitconfig' }
      - { src: 'node/npmrc', dest: '.npmrc' }
      - { src: 'tmux/tmux.conf', dest: '.tmux.conf' }
      - { src: 'vim', dest: '.vim' }
      - { src: 'vim/init.vim', dest: '.vimrc' }
    localconf:
      - .bashlocal
      - .vimlocal
    applications:
      - aptitude
      - build-essential
      - git
      - cmake
      - keepassx
      - meld
      - silversearcher-ag
      - vim-gtk
      - xclip
      - tmux
    python_packages:
      - ipython
      - virtualenv
      - httpie
    node_packages:
      - grunt-cli
      - gulp-cli

    chrome_deb_name: google-chrome-stable_current_amd64.deb

  tasks:
    - name: Create symlinks to dotfiles
      file:
        src: "{{ dotfiles }}/{{ item.src }}"
        dest: "{{ home }}/{{ item.dest }}"
        state: link
        force: yes
      with_items: symlinks

    - name: Check local config file existence
      stat: path={{ home }}/{{ item }}
      with_items: localconf
      register: localconf_stat

    - name: Copy default config files
      copy:
        src: "{{ localconf_dir }}/{{ item.item }}"
        dest: "{{ home }}/{{ item.item }}"
      when: not item.stat.exists
      with_items: localconf_stat.results

    - name: Install applications
      apt:
        name: "{{ item }}"
        state: installed
        update_cache: yes
        cache_valid_time: 3600
      with_items: applications
      become: yes

    - name: Install Pip
      easy_install: name=pip
      become: yes

    - name: Install Python packages
      pip: name={{ item }}
      with_items: python_packages
      become: yes

    - name: Install nodesource apt key
      apt_key: url=https://deb.nodesource.com/gpgkey/nodesource.gpg.key
      become: yes

    - name: Install nodesource repo
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_5.x {{ ansible_distribution_release }} main"
        update_cache: yes
      become: yes

    - name: Install node
      apt: name=nodejs
      become: yes

    - name: Create Node alternative
      alternatives: name=node link=/usr/bin/node path=/usr/bin/nodejs
      become: yes

    - name: Install node packages
      npm: name={{ item }} global=yes
      with_items: node_packages
      become: yes

    - name: Check if chrome is installed
      command: dpkg-query -W google-chrome-stable
      register: chrome_check_deb
      failed_when: chrome_check_deb.rc > 1
      changed_when: chrome_check_deb.rc == 1
      notify: Download chrome

  handlers:
    - name: Download chrome
      get_url:
        url: "https://dl.google.com/linux/direct/{{ chrome_deb_name }}"
        dest: "{{ home }}/Downloads/{{ chrome_deb_name }}"
      notify: Install chrome

    - name: Install chrome
      apt: deb={{ home }}/Downloads/{{ chrome_deb_name }}
      become: yes
